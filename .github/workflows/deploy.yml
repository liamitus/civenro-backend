name: CI and Deploy

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Set up environment for testing
        run: |
          echo DATABASE_URL=postgresql://postgres:postgres@localhost:5433/test > .env.test
          echo JWT_SECRET=test_secret >> .env.test

      - name: Run tests
        run: npm test

  # This job prepares the staging environment by running migrations and seed scripts
  # Only proceed if the test job succeeds.
  prepare-staging:
    name: Prepare Staging Environment
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Set environment variables
        run: |
          echo DATABASE_URL=${{ secrets.STAGING_DATABASE_URL }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET_STAGING }} >> .env

      - name: Wait for Database
        run: |
          for i in {1..5}; do
            pg_isready -d ${{ secrets.STAGING_DATABASE_URL }} && break
            echo "Database not ready, waiting..."
            sleep 5
          done

      - name: Reset and Seed Database
        run: |
          npx prisma migrate reset --force

  deploy:
    name: Deploy to Railway (Production)
    runs-on: ubuntu-latest
    needs: prepare-staging
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Railway CLI
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          railway up --service civenro-backend
